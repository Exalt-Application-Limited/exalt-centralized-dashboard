name: Shared Libraries CI Pipeline

permissions:
  contents: read
  checks: write
  pull-requests: write

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'shared-libraries/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'shared-libraries/**'

env:
  JAVA_VERSION: '17'
  MAVEN_VERSION: '3.8.7'

jobs:
  build:
    name: Build & Test All Libraries
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Compile All Libraries
      run: |
        for module in shared-*/; do
          if [ -f "$module/pom.xml" ]; then
            echo "Building $module"
            cd "$module" && mvn clean compile -q && cd ..
          fi
        done
      
    - name: Run All Tests
      run: |
        for module in shared-*/; do
          if [ -f "$module/pom.xml" ]; then
            echo "Testing $module"
            cd "$module" && mvn test -q && cd ..
          fi
        done
      
    - name: Package Libraries
      run: |
        for module in shared-*/; do
          if [ -f "$module/pom.xml" ]; then
            echo "Packaging $module"
            cd "$module" && mvn package -DskipTests -q && cd ..
          fi
        done
      
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-reports
        path: '**/surefire-reports/TEST-*.xml'
        
    - name: Upload JAR Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: shared-libraries-jars
        path: |
          **/target/*.jar
          !**/target/*-sources.jar
          !**/target/*-javadoc.jar
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        # Build and analyze each module
        for module in shared-*/; do
          if [ -f "$module/pom.xml" ]; then
            echo "Analyzing $module"
            cd "$module" && mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ github.repository_owner }}_$(basename $module) && cd ..
          fi
        done
