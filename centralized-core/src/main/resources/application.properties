# Centralized Dashboard Core Configuration

# Server configuration
server.port=8085
server.servlet.context-path=/api/dashboard

# Database configuration
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/centraldb}
spring.datasource.username=${DB_USERNAME:dbuser}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Security configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://auth-server:8080/auth/realms/microecommerce
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://auth-server:8080/auth/realms/microecommerce/protocol/openid-connect/certs

# Logging configuration
logging.level.root=INFO
logging.level.com.microecosystem=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized

# Cache configuration
spring.cache.type=redis
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.timeout=2000
spring.cache.redis.time-to-live=3600
spring.cache.redis.cache-null-values=false

# Fallback cache configuration (used in local profile)
spring.cache.caffeine.spec=maximumSize=1000,expireAfterAccess=600s

# Domain service integration endpoints
service.social-commerce.url=http://social-commerce-service:8080/api
service.warehousing.url=http://warehousing-service:8081/api
service.courier.url=http://courier-service:8082/api

# Admin Framework integration
service.admin-framework.url=http://admin-framework:8083/api
service.admin-framework.auth.url=${service.admin-framework.url}/auth
service.admin-framework.export.url=${service.admin-framework.url}/export
service.admin-framework.users.url=${service.admin-framework.url}/users

# Circuit breaker configuration for Admin Framework integration
resilience4j.circuitbreaker.instances.adminFrameworkAuth.failureRateThreshold=50
resilience4j.circuitbreaker.instances.adminFrameworkAuth.waitDurationInOpenState=20s
resilience4j.circuitbreaker.instances.adminFrameworkAuth.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.adminFrameworkAuth.slidingWindowSize=10
resilience4j.circuitbreaker.instances.adminFrameworkAuth.slidingWindowType=COUNT_BASED

# Cross-origin resource sharing
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.max-age=3600