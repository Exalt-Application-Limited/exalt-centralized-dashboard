name: Test centralized-real-time-data Service

on:
  push:
    branches: [ main, dev, feature/* ]
  pull_request:
    branches: [ main, dev ]

env:
  JAVA_VERSION: '17'
  SERVICE_NAME: centralized-real-time-data

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run unit tests
      run: mvn test -Dtest="**/unit/**"
      working-directory: centralized-dashboard/centralized-real-time-data
      env:
        SPRING_PROFILES_ACTIVE: test
        
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Unit Test Results
        path: centralized-dashboard/centralized-real-time-data/target/surefire-reports/*.xml
        reporter: java-junit
        
  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run integration tests
      run: mvn test -Dtest="**/integration/**"
      working-directory: centralized-dashboard/centralized-real-time-data
      env:
        SPRING_PROFILES_ACTIVE: integration-test
        
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Integration Test Results
        path: centralized-dashboard/centralized-real-time-data/target/surefire-reports/*.xml
        reporter: java-junit
        
  e2e-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Build application
      run: mvn package -DskipTests
      working-directory: centralized-dashboard/centralized-real-time-data
      
    - name: Start application
      run: |
        docker-compose up -d
        sleep 30
      working-directory: centralized-dashboard/centralized-real-time-data
      
    - name: Run E2E tests
      run: mvn test -Dtest="**/e2e/**"
      working-directory: centralized-dashboard/centralized-real-time-data
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: E2E Test Results
        path: centralized-dashboard/centralized-real-time-data/target/surefire-reports/*.xml
        reporter: java-junit
        
    - name: Stop application
      if: always()
      run: docker-compose down
      working-directory: centralized-dashboard/centralized-real-time-data
